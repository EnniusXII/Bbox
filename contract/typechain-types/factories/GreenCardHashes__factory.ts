/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  GreenCardHashes,
  GreenCardHashesInterface,
} from "../GreenCardHashes";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "HashStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "storeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "verifyHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610d578061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063258b85d4146100465780635b6beeb9146100765780636f28ee09146100a7575b600080fd5b610060600480360381019061005b91906105a2565b6100c3565b60405161006d9190610635565b60405180910390f35b610090600480360381019061008b9190610650565b6101ab565b60405161009e929190610731565b60405180910390f35b6100c160048036038101906100bc91906105a2565b6102fa565b005b6000806000846040516100d6919061079d565b908152602001604051809103902060000180546100f2906107e3565b905011610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b90610860565b60405180910390fd5b81604051602001610145919061079d565b6040516020818303038152906040528051906020012060008460405161016b919061079d565b908152602001604051809103902060000160405160200161018c9190610918565b6040516020818303038152906040528051906020012014905092915050565b60606000806000846040516101c0919061079d565b908152602001604051809103902060000180546101dc906107e3565b90501161021e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102159061097b565b60405180910390fd5b6000808460405161022f919061079d565b9081526020016040518091039020604051806040016040529081600082018054610258906107e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610284906107e3565b80156102d15780601f106102a6576101008083540402835291602001916102d1565b820191906000526020600020905b8154815290600101906020018083116102b457829003601f168201915b505050505081526020016001820154815250509050806000015181602001519250925050915091565b6000808360405161030b919061079d565b90815260200160405180910390206000018054610327906107e3565b905014610369576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610360906109e7565b60405180910390fd5b60008151116103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610a53565b60405180910390fd5b60004290506040518060400160405280838152602001828152506000846040516103d7919061079d565b908152602001604051809103902060008201518160000190816103fa9190610c0a565b50602082015181600101559050507fa0e74deee554563b6b60943f7c6686d895986ae9e54a55f2648e455dd04c402883838360405161043b93929190610cdc565b60405180910390a1505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104af82610466565b810181811067ffffffffffffffff821117156104ce576104cd610477565b5b80604052505050565b60006104e1610448565b90506104ed82826104a6565b919050565b600067ffffffffffffffff82111561050d5761050c610477565b5b61051682610466565b9050602081019050919050565b82818337600083830152505050565b6000610545610540846104f2565b6104d7565b90508281526020810184848401111561056157610560610461565b5b61056c848285610523565b509392505050565b600082601f8301126105895761058861045c565b5b8135610599848260208601610532565b91505092915050565b600080604083850312156105b9576105b8610452565b5b600083013567ffffffffffffffff8111156105d7576105d6610457565b5b6105e385828601610574565b925050602083013567ffffffffffffffff81111561060457610603610457565b5b61061085828601610574565b9150509250929050565b60008115159050919050565b61062f8161061a565b82525050565b600060208201905061064a6000830184610626565b92915050565b60006020828403121561066657610665610452565b5b600082013567ffffffffffffffff81111561068457610683610457565b5b61069084828501610574565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106d35780820151818401526020810190506106b8565b60008484015250505050565b60006106ea82610699565b6106f481856106a4565b93506107048185602086016106b5565b61070d81610466565b840191505092915050565b6000819050919050565b61072b81610718565b82525050565b6000604082019050818103600083015261074b81856106df565b905061075a6020830184610722565b9392505050565b600081905092915050565b600061077782610699565b6107818185610761565b93506107918185602086016106b5565b80840191505092915050565b60006107a9828461076c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107fb57607f821691505b60208210810361080e5761080d6107b4565b5b50919050565b7f48617368206e6f7420666f756e6420666f7220746869732049442e0000000000600082015250565b600061084a601b836106a4565b915061085582610814565b602082019050919050565b600060208201905081810360008301526108798161083d565b9050919050565b60008190508160005260206000209050919050565b600081546108a2816107e3565b6108ac8186610761565b945060018216600081146108c757600181146108dc5761090f565b60ff198316865281151582028601935061090f565b6108e585610880565b60005b83811015610907578154818901526001820191506020810190506108e8565b838801955050505b50505092915050565b60006109248284610895565b915081905092915050565b7f4861736820646f6573206e6f742065786973742e000000000000000000000000600082015250565b60006109656014836106a4565b91506109708261092f565b602082019050919050565b6000602082019050818103600083015261099481610958565b9050919050565b7f4861736820616c7265616479206578697374732e000000000000000000000000600082015250565b60006109d16014836106a4565b91506109dc8261099b565b602082019050919050565b60006020820190508181036000830152610a00816109c4565b9050919050565b7f486173682063616e6e6f7420626520656d7074792e0000000000000000000000600082015250565b6000610a3d6015836106a4565b9150610a4882610a07565b602082019050919050565b60006020820190508181036000830152610a6c81610a30565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ac07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a83565b610aca8683610a83565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b07610b02610afd84610718565b610ae2565b610718565b9050919050565b6000819050919050565b610b2183610aec565b610b35610b2d82610b0e565b848454610a90565b825550505050565b600090565b610b4a610b3d565b610b55818484610b18565b505050565b5b81811015610b7957610b6e600082610b42565b600181019050610b5b565b5050565b601f821115610bbe57610b8f81610880565b610b9884610a73565b81016020851015610ba7578190505b610bbb610bb385610a73565b830182610b5a565b50505b505050565b600082821c905092915050565b6000610be160001984600802610bc3565b1980831691505092915050565b6000610bfa8383610bd0565b9150826002028217905092915050565b610c1382610699565b67ffffffffffffffff811115610c2c57610c2b610477565b5b610c3682546107e3565b610c41828285610b7d565b600060209050601f831160018114610c745760008415610c62578287015190505b610c6c8582610bee565b865550610cd4565b601f198416610c8286610880565b60005b82811015610caa57848901518255600182019150602085019450602081019050610c85565b86831015610cc75784890151610cc3601f891682610bd0565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152610cf681866106df565b90508181036020830152610d0a81856106df565b9050610d196040830184610722565b94935050505056fea264697066735822122030567531dd50d327ff993030bf2ffa7e1e0c6ab5348638996b353c167652d53864736f6c634300081c0033";

type GreenCardHashesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreenCardHashesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreenCardHashes__factory extends ContractFactory {
  constructor(...args: GreenCardHashesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GreenCardHashes & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GreenCardHashes__factory {
    return super.connect(runner) as GreenCardHashes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreenCardHashesInterface {
    return new Interface(_abi) as GreenCardHashesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GreenCardHashes {
    return new Contract(address, _abi, runner) as unknown as GreenCardHashes;
  }
}
